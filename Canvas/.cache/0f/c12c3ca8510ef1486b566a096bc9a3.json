{"id":"index.html","dependencies":[{"name":"_css_loader","parent":"D:\\OPC\\Projet_6\\Canvas\\index.html","resolved":"C:\\Users\\Teo3tc\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n    <style>#canvas {\r\n        border: 1px solid black;\r\n      }</style>\r\n  </head>\r\n\r\n  <body>\r\n    <canvas id=\"canvas\" width=\"1000\" height=\"500\"></canvas>\r\n  </body>\r\n  <script>var grillY = [0, 50, 100, 150, 200, 250, 300, 350, 400, 450];\nvar grillX = [0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950];\nvar canvas = document.getElementById('canvas');\nvar ctx = canvas.getContext('2d');\nvar savePositionAfterObstacle = [];\n\nvar drawGrille = function drawGrille() {\n  ctx.strokeRect(0, 0, 50, 50);\n  var left = 0;\n  var tops = 0;\n\n  for (var index = 0; index < 200; index++) {\n    ctx.strokeRect(left, tops, 50, 50);\n    left = left + 50;\n\n    if (left == 1000) {\n      left = 0;\n      tops = tops + 50;\n    }\n  }\n};\n\nvar savePositionObstacleX = [];\nvar savePositionObstacleY = [];\n\nvar drawObstacle = function drawObstacle() {\n  ctx.fillRect(0, 0, 50, 50);\n\n  for (var index = 0; index < 40; index++) {\n    var _leftObstacle = 0;\n    var _topObstacle = 0;\n    _leftObstacle = grillX[Math.floor(Math.random() * grillX.length)];\n    _topObstacle = grillY[Math.floor(Math.random() * grillY.length)];\n    savePositionAfterObstacle.push({\n      leftObstacle: _leftObstacle,\n      topObstacle: _topObstacle\n    });\n    savePositionObstacleX.push(_leftObstacle);\n    savePositionObstacleY.push(_topObstacle);\n    ctx.fillRect(_leftObstacle, _topObstacle, 50, 50);\n  }\n};\n\ndrawGrille();\ndrawObstacle();\nconsole.log(savePositionObstacleX);\nconsole.log(savePositionObstacleY);\nconsole.log(savePositionAfterObstacle);\nvar savePositionPlayer = [];\nsavePositionAfterObstacle.forEach(function (save) {\n  var i = 0;\n  leftObstacle = grillX[Math.floor(Math.random() * grillX.length)];\n  topObstacle = grillY[Math.floor(Math.random() * grillY.length)];\n\n  if (save.leftObstacle != leftObstacle && save.topObstacle != topObstacle) {\n    savePositionPlayer.push({\n      leftObstacle: leftObstacle,\n      topObstacle: topObstacle\n    });\n  } else {\n    leftObstacle = grillX[Math.floor(Math.random() * grillX.length)];\n    topObstacle = grillY[Math.floor(Math.random() * grillY.length)];\n  }\n});\nconsole.log(savePositionPlayer);\nvar player1Position = savePositionPlayer[Math.floor(Math.random() * savePositionPlayer.length)];\nconsole.log(player1Position);\nctx.fillStyle = 'rgb(200, 0, 0)';\nctx.fillRect(player1Position.leftObstacle, player1Position.topObstacle, 50, 50);\n\nvar drawMoveleft = function drawMoveleft() {\n  var moveLeft = player1Position.leftObstacle;\n\n  for (var index = 0; index < 3; index++) {\n    moveLeft = moveLeft - 50;\n\n    if (moveLeft <= 0) {\n      moveLeft = 0;\n    }\n  }\n\n  console.log(moveLeft);\n  var saveLeftSize = player1Position.leftObstacle - moveLeft;\n  ctx.fillStyle = 'rgb(250, 250, 0)';\n  ctx.fillRect(moveLeft, player1Position.topObstacle, saveLeftSize, 50);\n};\n\nvar drawMoveRight = function drawMoveRight() {\n  var moveRight = player1Position.leftObstacle;\n\n  for (var index = 0; index < 3; index++) {\n    moveRight = moveRight + 50;\n\n    if (moveRight >= 1000) {\n      moveRight = 1000;\n    }\n  }\n\n  console.log(moveRight);\n\n  var saveRightSize = function saveRightSize() {\n    if (moveRight == 1000) {\n      return player1Position.leftObstacle - moveRight + 50;\n    } else {\n      return player1Position.leftObstacle - moveRight + 50;\n    }\n  };\n\n  var positionRight = function positionRight() {\n    if (moveRight <= 950) {\n      return moveRight = moveRight + 50;\n    } else {\n      return moveRight;\n    }\n  };\n\n  ctx.fillStyle = 'rgb(250, 250, 0)';\n  ctx.fillRect(positionRight(), player1Position.topObstacle, saveRightSize(), 50);\n};\n\nvar drawMoveTop = function drawMoveTop() {\n  var moveTop = player1Position.topObstacle;\n\n  for (var index = 0; index < 3; index++) {\n    moveTop = moveTop - 50;\n\n    if (moveTop <= 0) {\n      moveTop = 0;\n    }\n  }\n\n  console.log(moveTop);\n  var saveLeftSize = player1Position.topObstacle - moveTop;\n  ctx.fillStyle = 'rgb(250, 250, 0)';\n  ctx.fillRect(player1Position.leftObstacle, moveTop, 50, saveLeftSize);\n};\n\nvar drawMoveBottom = function drawMoveBottom() {\n  var moveBottom = player1Position.topObstacle;\n\n  for (var index = 0; index < 3; index++) {\n    moveBottom = moveBottom + 50;\n\n    if (moveBottom >= 500) {\n      moveBottom = 500;\n    }\n  }\n\n  console.log(moveBottom);\n\n  var saveRightSize = function saveRightSize() {\n    if (moveBottom == 500) {\n      return player1Position.topObstacle - moveBottom + 50;\n    } else {\n      return player1Position.topObstacle - moveBottom + 50;\n    }\n  };\n\n  var positionRight = function positionRight() {\n    if (moveBottom <= 450) {\n      return moveBottom = moveBottom + 50;\n    } else {\n      return moveBottom;\n    }\n  };\n\n  ctx.fillStyle = 'rgb(250, 250, 0)';\n  ctx.fillRect(player1Position.leftObstacle, positionRight(), 50, saveRightSize());\n};\n\ndrawMoveleft();\ndrawMoveRight();\ndrawMoveTop();\ndrawMoveBottom();</script>\r\n</html>\r\n"},"sourceMaps":null,"error":null,"hash":"2b9b3ad28db0d41d9ddd4a3dc32d4de5","cacheData":{"env":{}}}